{"version":3,"sources":["reducer.js","actions.js","lib/components/header.js","lib/components/footer.js","lib/components/menu-pages.js","lib/components/menu-wiki.js","lib/components/menu-sidebar.js","lib/pages/page-main.js","lib/pages/page-wiki.js","lib/pages/page-dashboard.js","lib/pages/page-single.js","lib/pages/page-edit.js","lib/pages/page-create.js","lib/Navigation.js","App.js","index.js"],"names":["defaultState","currentUser","pages","wikiPages","currentPage","page","title","newsItems","reducer","state","arguments","length","undefined","action","console","log","type","Object","objectSpread","payload","getWikiPages","actionTypes","changeCurrentPage","getPages","Header","handleButtonClick","_this","props","_this2","this","react_default","a","createElement","className","onClick","React","Component","connect","dispatch","actions","Footer","MenuPages","changePage","single","data","navigation","map","i","key","MenuWiki","Sidebar","id","menu_pages","menu_wiki","MainPage","Wiki","Dashboard","SinglePage","ReactHtmlParser","content","EditPage","CreatePage","Navigation","page_main","page_edit","page_create","page_wiki","page_dashboard","page_single","header","menu_sidebar","pageSwitch","footer","store","createStore","window","App","fetchPages","fetch","then","res","json","newPagesList","forEach","newPage","rendered","slug","excerpt","replace","parent","menu_order","push","fetchWikiPages","mode","credentials","headers","Access-Control-Allow-Credentials","Access-Control-Allow-Origin","origin","results","es","lib_Navigation","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7efc5f02.chunk.js","sourcesContent":["const defaultState = {\n    currentUser: {}, //is the user logged in? who is it?\n    pages:[], //wordpress pages\n    wikiPages: [], //mediawiki articles\n    currentPage:{//what page to display\n        page: 'page-main',\n        title: 'Main page',\n    }, \n    newsItems: [], //wordpress posts\n};\n\nconst reducer = (state=defaultState, action)=>{\n  console.log(\"redux actionType: \", action.type)\n\tswitch (action.type) {\n\t\tcase 'CHANGE_CURRENT_PAGE':\n\t\t\treturn {...state, currentPage: action.payload};\n\t\tcase 'UPDATE_CURRENT_USER':\n\t\t\treturn {...state, currentUser: action.payload};\n\t\tcase 'UPDATE_NEWS':\n\t\t\treturn {...state, newsItems: action.payload};\n        case 'GET_WIKI_PAGES':\n            return {...state, getWikiPages: action.payload};\n\t\tcase 'GET_PAGES':\n\t\t\treturn {...state, pages: action.payload};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;","const actionTypes = {\n//\tUSER_LOGGED_IN: 'USER_LOGGED_IN',\n    CHANGE_CURRENT_PAGE: 'CHANGE_CURRENT_PAGE',\n    UPDATE_CURRENT_USER: 'UPDATE_CURRENT_USER',\n    UPDATE_NEWS: 'UPDATE_NEWS',\n    GET_WIKI_PAGES: 'GET_WIKI_PAGES',\n    GET_PAGES: 'GET_PAGES',\n\n}\n//CHANGE_CURRENT_PAGE\nexport const changeCurrentPage = (page)=>{\n    return {type: actionTypes.CHANGE_CURRENT_PAGE, payload:page}\n}\n//UPDATE_CURRENT_USER\nexport const updateCurrentUser = (user)=>{\n    return {type: actionTypes.UPDATE_CURRENT_USER, payload:user}\n}\n//UPDATE_NEWS\nexport const updateNews = (news)=>{\n    return {type: actionTypes.UPDATE_NEWS, payload:news}\n}\n//UPDATE_WIKI_NAV\nexport const getWikiPages = (wiki)=>{\n    return {type: actionTypes.GET_WIKI_PAGES, payload:wiki}\n}\n//GET_PAGES\nexport const getPages = (pages)=>{\n    return {type: actionTypes.GET_PAGES, payload:pages}\n}","//the header\n\nimport { connect } from 'react-redux';\n\nimport React from 'react';\nimport * as actions from '../../actions';\n\nclass Header extends React.Component {\n    handleButtonClick = (page)=>{\n        this.props.changeCurrentPage({page: page});\n        return false\n    }\n    render() {\n        return (\n            <header className=\"container\">\n                <button className=\"link\" onClick={()=>{this.handleButtonClick(\"page-main\")}}><h2>Header</h2></button>\n                <button className=\"link\" onClick={()=>{this.handleButtonClick(\"page-dashboard\")}}>Dashboard</button>\n                \n            </header>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return state\n}\n\nconst mapDispatchToProps = (dispatch)=>({\n    changeCurrentPage: (page) => {dispatch(actions.changeCurrentPage(page))}\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","//the footer\nimport React from 'react';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <footer className=\"container\">\n                <h2> Footer</h2>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;","//header menu for desktop and bigger screens//the header\n\nimport { connect } from 'react-redux';\n\nimport React from 'react';\nimport * as actions from '../../actions';\n\nclass MenuPages extends React.Component {\n    changePage = (page)=>{\n        this.props.changeCurrentPage({\n            page: \"page-single\",\n            single: \"page\",\n            data: page,\n        });\n    }\n    navigation = ()=>{\n        \n    }\n    render() {\n        return (\n            <ul className=\"nav-pages nav-list\">\n                \n                <h4>Pages</h4>\n                {this.props.pages.map((page, i)=>{\n                    return (\n                        //Each page li item\n                        <li key={i}>\n                            <button className=\"link\" type=\"button\" onClick={()=>{this.changePage(page)}} >{page.title}</button> \n                        </li>\n                    )\n                })}\n            </ul>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return state;\n}\n\nconst mapDispatchToProps = (dispatch)=>({\n    changeCurrentPage: (page) => {dispatch(actions.changeCurrentPage(page))}\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuPages);","// a featured navigation of wiki\n// will probably be either a \n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass MenuWiki extends React.Component {\n    render() {\n        return (\n            <ul>\n                <h4>Wiki</h4>\n            </ul>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return state\n}\n\nexport default connect(mapStateToProps)(MenuWiki);","//header menu for desktop and bigger screens//the header\n\n\nimport React from 'react';\nimport MenuPages from './menu-pages';\nimport MenuWiki from './menu-wiki';\n\nclass Sidebar extends React.Component {\n    render() {\n        return (\n            <nav id=\"sidebar\" className=\"container\">\n                <MenuPages />\n                <MenuWiki />\n            </nav>\n        )\n    }\n}\n\n\nexport default Sidebar;","/*\nWordpress\nMediaWiki\n\nMain page (latest news, featured content)\n    header\n    fetch featured content\n        news item (wp)\n        featured wiki navigation (mediawiki)\n    footer\n\nLoading\nLogin \n    login button\nSign up  > wordpress initial > creates a mediawiki account\n    sign up form\n\nwiki main ( all/featured wiki navigation)\n    fetch wiki content\nnews main ( all/featured news/wordpress )\n    fetch news content\n\nsingle news\nsingle wiki article\nsearch / archive\n    search form (query)\n    search result item\n\ncreate page/wiki article\n    create form (wiki)\ncreate post/page wordpress\n    create form (wp)\n\nedit wiki article\n    edit form (wiki)\nedit or delete post/page wordpress\n    edit form (wp)\n\ndashboard for logged in user\n    logout button\n\n*/\n\nimport React from 'react';\n\nclass MainPage extends React.Component {\n    render() {\n        return (\n            <article className=\"content\">                \n                <h2> Main Page </h2>\n            </article>\n        )\n    }\n}\n\nexport default MainPage;","//page only showing featured mediawiki articles/navigation for wiki\n\nimport React from 'react';\n//import MenuWiki from '../components/menu-wiki';\n\nclass Wiki extends React.Component {\n    render() {\n        return (\n            <section className=\"content\">\n                <h2>Wiki main</h2>\n            </section>\n        )\n    }\n}\n\nexport default Wiki;","//dashboard for current user\nimport React from 'react';\n\nclass Dashboard extends React.Component {\n    render() {\n        return (\n            <article className=\"content\">                \n                <h2> Dashboard </h2>\n            </article>\n        )\n    }\n}\n\nexport default Dashboard;","//single article/page setup\n//should change content depending on what was selected (wp news or wiki article)\n\nimport React from 'react';\nimport ReactHtmlParser  from 'react-html-parser';\n\nclass SinglePage extends React.Component {\n    render() {\n        return (\n            <article className=\"content\">\n                <h2>Single page: {this.props.data.title}</h2>\n                {console.log(\"props data: \", this.props.data)}\n                { ReactHtmlParser(this.props.data.content)}\n            </article>\n        )\n    }\n}\n\nexport default SinglePage;","//page for editing articles/news\nimport React from 'react';\n\nclass EditPage extends React.Component {\n    render() {\n        return (\n            <section className=\"content\">\n                <h2> Edit page </h2>\n            </section>\n        )\n    }\n}\n\nexport default EditPage;","import React from 'react';\n\nclass CreatePage extends React.Component {\n    render() {\n        return (\n            <section className=\"content\">\n                <h2> Create page </h2>\n            </section>\n        )\n    }\n}\n\nexport default CreatePage;","import React from 'react';\nimport { connect } from 'react-redux';\n//pages\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Sidebar from './components/menu-sidebar';\nimport MainPage from './pages/page-main';\nimport Wiki from './pages/page-wiki';\nimport Dashboard from './pages/page-dashboard';\nimport SinglePage from './pages/page-single';\nimport EditPage from './pages/page-edit';\nimport CreatePage from './pages/page-create';\nimport * as actions from '../actions';\n\nclass Navigation extends React.Component {\n    /* Switches the active page */\n    pageSwitch(page) {\n        switch(page.page){\n            // default\n            default:              \n            return<MainPage/>;\n            //edit page\n            case \"page-edit\":    \n            return<EditPage />;\n            //create page\n            case \"page-create\":   \n            return <CreatePage />;\n            //main page\n            case \"page-main\":     \n            return <MainPage/>;\n            //wiki main page\n            case \"page-wiki\":     \n            return <Wiki />;\n            //user dashboard\n            case \"page-dashboard\":     \n            return <Dashboard />;\n            //single article/page\n            case \"page-single\":   \n            return <SinglePage data={page.data} />;\n            //wordpress/news main page\n        }\n    }\n    render() {\n        //Sidebar should change when user selects 'dashboard'\n        //to navigate the \"backend\"\n        return (\n            <div id=\"wrapper\">\n                <Header />\n                <Sidebar />\n                <main id=\"content-wrapper\" className=\"container\">\n                    {this.pageSwitch(this.props.currentPage)}\n                </main>\n                <Footer />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    currentPage: state.currentPage,\n    pages: state.pages,\n})\n  \nconst mapDispatchToProps = (dispatch)=>({\n    getWikiPages: (pages) => {dispatch(actions.getWikiPages(pages))},\n    getPages: (pages) => {dispatch(actions.getPages(pages))}\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","import React, { Component } from 'react';\n//React HTML Parser to parse html from strings\n//import ReactHtmlParser from 'react-html-parser';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducer';\nimport Navigation from './lib/Navigation';\nimport * as actions from './actions';\n\nconst store = createStore(reducer);\nwindow.store = store;\n\nclass App extends Component {\n  \n\n    /*\n    =========================== FETCH wordpress pages \n    */\n  fetchPages = ()=>{\n    const projectsURL = \"http://localhost/prototype-wp-wiki/wordpress/wp-json/wp/v2/pages\";\n    fetch(projectsURL).then(res=>res.json()).then((json)=>{\n      //console.log(\"list length: \", json.length)\n      let newPagesList = [];\n      json.forEach((page)=>{\n        //console.log(\"Page: \", page);\n        //create new object per page\n        const newPage = [];\n        newPage[\"title\"] = page.title.rendered;\n        newPage[\"content\"] = page.content.rendered;\n        newPage[\"slug\"] = page.slug;\n        newPage[\"description\"] = page.excerpt.rendered.replace(/<[^>]+>/g, '');\n        newPage[\"id\"] = page.id;\n        newPage[\"parent\"] = page.parent;\n        newPage[\"order\"] = page.menu_order;\n\n        newPagesList.push(newPage)\n      })\n      return newPagesList;\n    }).then((pages)=>{\n      store.dispatch(actions.getPages(pages));\n    })\n  }\n  \n    /*\n    =========================== FETC wiki page \n    */\n  //http://localhost/prototype-wp-wiki/wiki/api.php?action=query&list=categorymembers&cmtitle=Category:Pages&format=json\n  //http://localhost/prototype-wp-wiki/wiki/api.php?action=parse&format=json&page=Main_Page\n  fetchWikiPages = ()=>{\n    const wikiUrl = \"http://localhost/prototype-wp-wiki/wiki/api.php?action=query&list=categorymembers&cmtitle=Category:Pages&format=json\";\n    const fetchHeader = {\n      mode:'no-cors',\n      credentials: 'include',\n      headers: {\n        \"Access-Control-Allow-Credentials\": false,\n        'Access-Control-Allow-Origin': \"192.168.2.117:3000\",\n        origin: \"192.168.2.117:3000\",\n      }\n    };\n    fetch(wikiUrl, fetchHeader).then((results)=>{\n      console.log(\"WikiPages: \", results)\n      \n    })\n  }\n  \n    /*\n    =========================== COMPONENT DID MOUNT \n    */\n  componentDidMount(){\n    this.fetchPages(); //fetches WP pages\n    this.fetchWikiPages();\n  }\n  render() {\n    /*\n    =========================== RENDER \n    */\n    return (\n        <Provider store={store}>\n          <Navigation />\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}